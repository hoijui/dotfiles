# init # {{{1
[ -n "$SHRC_LANGUAGE_LOADED" -a -n "$MSYS$CYGWIN" ] && return
# [ $SHLVL -gt 1 ] && return 0
[ -f $HOME/.shrc.functions ] && source $HOME/.shrc.functions
[ -f $HOME/.shrc.refe ] && source $HOME/.shrc.refe
if [ -n "$ZSH_NAME" ]; then
  SHELL_NAME=zsh
# elif [ -n $BASH ]; then
else
  SHELL_NAME=bash
fi

shrc_section_title "OS settings" # {{{1

PATH="$HOME/.bin:$HOME/bin:$HOME/.local/bin:$PATH"

case $OSTYPE in
  cygwin*)
    export CYGWIN='cygwin'
    soft_source $HOME/.shrc.cygwin
    type /usr/bin/perl >/dev/null 2>&1 && PATH="$(echo $PATH | /usr/bin/perl -ne 'print join ":",grep {$_ !~ /(Intel|WindowsPowerShell|\/Wbem|Skype)/} split(":", $_);')"
    PATH=$HOME/bin/windows:$PATH
    ;;
  msys)
    soft_source $HOME/.shrc.cygwin
    PATH="$(echo "$HOME/bin/windows:$PATH" | /usr/bin/sed 's/[()]/\\\0/g' | /usr/bin/sed 's/\\\\\([()]\)/\\\1/g')"
    # PATH="$(echo "$HOME/bin/windows:$PATH" | /usr/bin/sed 's/)/\\)/g' | /usr/bin/sed 's/\\\\)/\\)/g')"
    type /usr/bin/perl >/dev/null 2>&1 && PATH="$(echo $PATH | /usr/bin/perl -ne 'print join ":",grep {$_ !~ /(Intel|WindowsPowerShell|\/Wbem|Skype)/} split(":", $_);')"
    # remove_path /usr/local/bin /usr/bin /bin /usr/local/sbin /usr/sbin /sbin
    # PATH=$PATH:/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin
    ;;
  darwin*)
    soft_source $HOME/.shrc.osx
    if [ -z "$HOMEBREW_PREFIX" ]; then
      HOMEBREW_PREFIX=/usr/local/
    fi
    if [ "$LOGIN_FROM" != "Finder" ] ; then
      remove_path /usr/local/bin /usr/bin /bin /usr/local/sbin /usr/sbin /sbin
      PATH=$PATH:/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin
      export PYTHONPATH=/usr/local/lib/python:$PYTHONPATH
      PATH=$HOME/bin/macosx:$PATH:/Applications/android-sdk-mac_x86/tools:/Applications/android-sdk-mac_x86/platform-tools
      [ "$LANG" = "ja_JP" ] && export LANG=ja_JP.UTF-8
    fi
    ;;
  freebsd*)
    PATH=$HOME/bin/bsd:$PATH
    soft_source $HOME/.shrc.bsd
    ;;
  linux*)
    PATH=$HOME/bin/linux:$PATH
    if [ -e "$HOME/.linuxbrew" ]; then
      PATH="$HOME/.linuxbrew/bin:$PATH"
      MANPATH="$HOME/.linuxbrew/share/man:$MANPATH"
      export INFOPATH="$HOME/.linuxbrew/share/info:$INFOPATH"
    fi
    if [[ `uname -r` =~ Microsoft ]]; then
      soft_source $HOME/.shrc.winlinux
    else
      soft_source $HOME/.shrc.linux
    fi
    ;;
  solaris*)
    PATH=$HOME/bin/solaris:$PATH
    soft_source $HOME/.shrc.solaris
    ;;
  *)
    ;;
esac

shrc_section_title "languages" {{{1

shrc_section_title "java" # {{{2
if ! is_mac ; then
  _JAVA_OPTIONS="$_JAVA_OPTIONS -Dawt.useSystemAAFontSettings=lcd"

  if [ "$LANG" = 'ja_JP.UTF-8' ] ; then
    _JAVA_OPTIONS="$_JAVA_OPTIONS -Dfile.encoding=UTF-8"
  fi
  export _JAVA_OPTIONS

  if [ -d /usr/lib/jvm/java-6-sun ];then
    JAVA_HOME=/usr/lib/jvm/java-6-sun
    export JAVA_HOME
    if [ -d $JAVA_HOME/jre ];then
      JRE_HOME=$JAVA_HOME/jre
      export JRE_HOME
    fi
  fi
# else
  # _JAVA_OPTIONS="$_JAVA_OPTIONS -Dawt.useSystemAAFontSettings=on"
  # _JAVA_OPTIONS="$_JAVA_OPTIONS -Dfile.encoding=UTF-8"
  # export _JAVA_OPTIONS
fi

export PIPENV_VENV_IN_PROJECT=true
export PYTHONSTARTUP=~/.pyrc
PATH="node_modules/.bin:$PATH"
if ! is_win ; then
  xenv-init() {
    local VMNAME=$1
    if [ -e "$HOME/.${VMNAME}" ]; then
      PATH=$HOME/.${VMNAME}/bin:$PATH
      if [ -n "$PS1" -o -n "$PROMPT" ]; then
        # eval "$(${VMNAME} init -)"
        PATH=$HOME/.${VMNAME}/shims:$PATH
        soft_source ~/.${VMNAME}/completions/${VMNAME}.$SHELL_NAME
      else
        PATH=$HOME/.${VMNAME}/shims:$PATH
      fi
      return 0
    fi
    return 1
  }

  shrc_section_title "for xenv-perl" # {{{2
  xenv-init plenv

  shrc_section_title "for xenv-python" # {{{2
  xenv-init pyenv
  [ -e "$HOME/Library/Python/3.7/bin/" ] && PATH=$HOME/Library/Python/3.7/bin/:$PATH

  # export PYTHONPATH=/usr/local/lib/python2.5/site-packages:$ROOTSYS/lib
  # export PYTHONPATH=~/.lib/python:$PYTHONPATH

  shrc_section_title "for xenv-node.js" # {{{2
  # if [ -e ~/.nenv ];then
  #   xenv-init nenv
  xenv-init nodenv

  if [ -e /usr/local/googkit ]; then
    export GOOGKIT_HOME=/usr/local/googkit
    export PATH="$PATH:$GOOGKIT_HOME/bin"
  fi

  shrc_section_title "xenv-php" # {{{2
  # must be after eval $(rbenv init)
  [ -e ~/.composer/vendor/bin ] && PATH="vendor/bin:$HOME/.composer/vendor/bin:$PATH"
  xenv-init phpenv
  if is_mac; then
    # export PHP_BUILD_CONFIGURE_OPTS="--enable-fileinfo --enable-hash --enable-json --enable-bcmath --with-bz2 --enable-ctype --with-iconv --with-gettext --with-pcre-regex --enable-phar --enable-simplexml --enable-dom --with-libxml-dir=/usr --enable-tokenizer --with-mhash=yes --with-gd --enable-calendar --enable-cli --enable-cgi --enable-gd-native-ttf --enable-mbregex --enable-wddx --enable-zend-multibyte --with-iodbc --with-ldap-sasl --with-ldap --with-pgsql --with-pear"
    # export PHP_BUILD_CONFIGURE_OPTS="--enable-fileinfo --enable-hash --enable-json --enable-bcmath --with-bz2 --enable-ctype --with-iconv --with-gettext --with-pcre-regex --enable-phar --enable-simplexml --enable-dom --with-libxml-dir=/usr --enable-tokenizer --with-mhash=yes --with-gd --enable-calendar --enable-cli --enable-cgi --enable-gd-native-ttf --enable-mbregex --enable-wddx --enable-zend-multibyte --with-iodbc --with-ldap-sasl --with-ldap --with-pgsql --with-pear"
    # export PHP_BUILD_CONFIGURE_OPTS="--enable-fileinfo --enable-hash --enable-json --enable-bcmath --with-bz2 --enable-ctype --with-iconv --with-gettext --with-pcre-regex --enable-phar --enable-simplexml --enable-dom --with-libxml-dir=/usr --enable-tokenizer --with-mhash=yes --with-gd --enable-calendar --enable-cli --enable-cgi --enable-gd-native-ttf --enable-mbregex --enable-wddx --enable-zend-multibyte --with-pgsql --with-pear"
    # export PHP_BUILD_CONFIGURE_OPTS="--enable-fileinfo --enable-hash --enable-json --enable-bcmath --with-bz2 --enable-ctype --with-iconv --with-gettext --with-pcre-regex --enable-phar --enable-simplexml --enable-dom --with-libxml-dir=/usr --enable-tokenizer --with-mhash=yes --with-gd --enable-calendar --enable-gd-native-ttf --enable-mbregex --enable-wddx --enable-zend-multibyte --with-ldap-sasl --with-ldap --with-pgsql --with-pear --with-apxs2=$(which apxs) --disable-fpm"
    #
    PHP_BUILD_CONFIGURE_OPTS=""
    builtin which apxs 2>&1 >/dev/null && PHP_BUILD_CONFIGURE_OPTS="--with-apxs2=$(which apxs) "
    export PHP_BUILD_CONFIGURE_OPTS="${PHP_BUILD_CONFIGURE_OPTS} --enable-fileinfo --enable-hash --enable-json --enable-bcmath --with-bz2 --enable-ctype --with-iconv --with-gettext --with-pcre-regex --enable-phar --enable-simplexml --enable-dom --with-libxml-dir=/usr --enable-tokenizer --with-mhash=yes --enable-exif --with-gd --enable-calendar --enable-gd-native-ttf --with-jpeg-dir=/usr/local --with-png-dir=/usr/local --enable-mbregex --enable-wddx --enable-zend-multibyte --with-ldap-sasl --with-ldap --with-pgsql --with-pear --disable-fpm"
  fi

  if is_exec php-no-xdebug ; then
    php-no-xdebug-composer() {
      php-no-xdebug `builtin command which composer` "$@"
    }
  fi


  # scala {{{2
  if [ -e ~/.svm ]; then
    export SCALA_HOME=~/.svm/current/rt
    PATH="$SCALA_HOME/bin:$HOME/.svm/:$PATH"
  fi

  # go {{{2
  xenv-init golangenv
  # xenv-init goenv
  # export GOPATH=~/.gopath
  # if [ -n "$HOMEBREW_PREFIX" -a -e "$HOMEBREW_PREFIX/bin/go" ]; then
  #   export GOPATH=$(dirname $(dirname $HOMEBREW_PREFIX/bin/go/$(readlink /usr/local/bin/go)))
  # fi

  # lua {{{2
  xenv-init luaenv

  # direnv {{{2
  if [ -e ~/.direnv/direnv ]; then
    PATH="$HOME/.direnv:$PATH"
    eval "$(direnv hook $SHELL_NAME)"
  fi

  # haskell {{{2
  PATH="${HOME}/.cabal/bin:$PATH"

  shrc_section_title "for Ruby" # {{{2
  xenv-init rbenv
  rvm() {
    [[ $1 == 'use' ]] && rbenv shell $2
  }
  # vim {{{2
  xenv-init vimenv
  # terraform {{{2
  xenv-init tfenv
fi

export GOPATH=$HOME/.gopath
PATH="$GOPATH/bin:$PATH"
[ -e $GOPATH/src/bitbucket.org/ymotongpoo/goenv/shellscripts/goenvwrapper.sh ] \
  && source $GOPATH/src/bitbucket.org/ymotongpoo/goenv/shellscripts/goenvwrapper.sh

shrc_section_title "etc" # {{{2
# mysqlenv {{{3
[ -e ~/.mysqlenv/etc/bashrc ] && source ~/.mysqlenv/etc/bashrc

# c/c++ library path
#export PATH=~/bin:$QTDIR/bin:$KDEDIR/bin:/usr/local/bin:/usr/local/X11R7/bin:/usr/bin:/bin:./:/usr/local/sbin:/usr/sbin:/sbin:$ROOTSYS/bin:$TETEX_BIN_PATH:/usr/local/jre/bin:/usr/local/RealPlayer
#export LD_LIBRARY_PATH=/usr/local/X11R7/lib:$QTDIR/lib:$KDEDIR/lib:/usr/local/lib:/usr/lib:/lib:$ROOTSYS/lib:/usr/local/firefox

# for KDE/QT
#export KDEDIR=/usr/local/kde
#export QTDIR=/usr/local/qt

# for teTeX
#export TETEX_PATH=/usr/local/teTeX
#export TEXMF=$TETEX_PATH/share/texmf
#export TETEX_BIN_PATH=$TETEX_PATH/bin/i686-pc-linux-gnu

shrc_section_title "Mozilla Setting" # {{{2
export MOZ_NO_REMOTE=true

export PATH
export MANPATH

shrc_section_title "finalize" # {{{1
env_unique PATH
env_unique MANPATH
export SHRC_LANGUAGE_LOADED=1
unset SHELL_NAME

# __END__ {{{1
# vim: fdm=marker sw=2 ts=2 ft=zsh et:
