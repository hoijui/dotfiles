#!/usr/bin/env python
# coding: utf-8

# pip install pit

import smtplib
import sys

import argparse
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
# from pit import Pit

def main():
    parser = argparse.ArgumentParser(description="html mail sender")
    parser.add_argument('-t', '--to', default="root@localhost")
    parser.add_argument('-f', '--from', default="root@localhost")
    parser.add_argument('-s', '--subject', default="test mail")
    parser.add_argument('-H', '--smtp_host', default="localhost")
    parser.add_argument('-P', '--smtp_port', default="25")
    parser.add_argument('-u', '--smtp_user', default="")
    parser.add_argument('-p', '--smtp_password', default="")
    parser.add_argument('-T', '--text', default=None)
    parser.add_argument('infile', nargs='*', type=argparse.FileType('r'), default=[sys.stdin])

    options = parser.parse_args()
    config = vars(options)
    # config = Pit.get('html_mail_send', {
    #     'require': {
    #         'to': '',
    #         'from': 'root@localhost.com',
    #         'subject': 'HTML Mail',
    #         'smtp_host': 'localhost',
    #         'smtp_port': 25,
    #         # 'smtp_user': '',
    #         # 'smtp_password': '',
    #     }
    # })

    args = options.infile
    if len(args) <= 0:
        print("required arguments.")
        exit(1)

    text = None
    for fp in args:

        from_addr = config['from']
        to_addr = config["to"]
        if isinstance(to_addr, list):
            to_addr = ",".join(to_addr)
        # Create message container - the correct MIME type is multipart/alternative.
        msg = MIMEMultipart('alternative')
        msg['Subject'] = config['subject']
        msg['From'] = from_addr
        msg['To'] = to_addr

        if config["text"]:
            text = config["text"]
        # Create the body of the message (a plain-text and an HTML version).
        # text = "Hi!\nHow are you?\nHere is the link you wanted:\nhttp://www.python.org"
        # html = open(fpath).read()
        html = fp.read()

        # Record the MIME types of both parts - text/plain and text/html.
        if text:
            part1 = MIMEText(text, 'plain', "utf-8")
        part2 = MIMEText(html, 'html', "utf-8")

        # Attach parts into message container.
        # According to RFC 2046, the last part of a multipart message, in this case
        # the HTML message, is best and preferred.
        if text:
            msg.attach(part1)
        msg.attach(part2)
        # Send the message via local SMTP server.
        mail = smtplib.SMTP(config["smtp_host"], config["smtp_port"])

        mail.ehlo()

        if config["smtp_port"] == 587:
            mail.starttls()

        if config.get('smtp_user'):
            mail.login(config["smtp_user"], config["smtp_password"])
        mail.sendmail(from_addr, to_addr, msg.as_string())
        mail.quit()
    return 0

if __name__ == '__main__':
    main()

