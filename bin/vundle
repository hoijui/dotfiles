#!/bin/bash

# functions {{{1
msgnotify() { # {{{2
  local title=$1
  shift

  notify-send -i ~/bin/.opt/growl/growl_i.png "$title" "$*" > /dev/null 2>&1
  # is_exec growlnotify && growlnotify -t $title -m "$*" --image ~/bin/.opt/growl/growl_i.png
  # is_exec notify-send && notify-send $title "$*"
}

submodules-update() { # {{{2
  local cwd=$(pwd)
  for d in ~/.github-dotfiles ~/.osx_library ; do
    if [ ! -e "$d" ]; then
      continue
    fi
    cd $d
    git submodule update --init
    # git submodule foreach 'git checkout master; git pull --ff --rebase'
    git submodule foreach 'git checkout master; git pull origin master'
  done
  cd ${cwd}
  msgnotify "update .github-dotfiles" "complete!"
}

update-neobundle() { # {{{2
  # find ~/.vim/neobundle -name tags | grep doc | grep -v .git | xargs rm
  # vim -c "silent NeoBundleInstall" -c "let g:vimproc_dll_path=''" -c "silent NeoBundleUpdate" -c "quitall"
  vim -c "silent NeoBundleInstall" -c "silent NeoBundleUpdate" -c "quitall"
  msgnotify "neobundle update" "complete!"
}

main () { # {{{2
  [ -e ~/.github-dotfiles ] && cd ~/.github-dotfiles && git pull
  submodules-update
  update-neobundle
}

# start {{{1
main "$@"

# __END__ {{{1
