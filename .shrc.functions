# util functions

is_exec() {
  [ x"$1" = x"" ] && return 1
  which $1 >/dev/null 2>&1
  return $?
}
is_win() {
  case $OSTYPE in
    cygwin*)
      return 0;;
  esac
  return 1
}
is_mac() {
  case $OSTYPE in
    darwin*)
      return 0;;
  esac
  return 1
}
is_freebsd() {
  case $OSTYPE in
    freebsd*)
      return 0;;
  esac
  return 1
}
is_colinux() {
  [ "$ENV_WORKING" = 'colinux' ] && return 0
  return 1
}
load_sh() {
  if [ x$1 = x -o ! -f "$1" ];then
    return 1
  fi
  source $1
  return 0
}
soft_source() {
  [ -e "$1" ] && source "$1"
  return $?
}
remove_path() {
  local rmv
  for rmv in $* ; do
    PATH=`echo $PATH| sed -e 's!'$rmv'!!' -e 's/::/:/'`
  done
  return 0
}
# http://d.hatena.ne.jp/tyru/20090526/1243339840
env_unique() {
  if [ $# = 0 ]; then return; fi
  local env="$1"
  local sep="$2"

  eval "export $env=$(perl -e 'my ($e, $s) = (shift, shift || q(:)); #\
        for(split $s, $ENV{$e}) { #\
            $h{$_} or $h{$_}=++$i #\
        } #\
        $,=$s; #\
        %h=reverse %h; #\
        print map { $h{$_} } #\
              sort { $a <=> $b } keys %h' \
    $env $sep)"
}

# vim: fdm=marker sw=2 ts=2 ft=zsh et:
