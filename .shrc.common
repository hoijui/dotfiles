# source local settings
[ -f $HOME/.shrc.common.util ] && source $HOME/.shrc.common.util

# util functions {{{
is_exec() {
  [ x"$1" = x"" ] && return 1
  which $1 >/dev/null 2>&1
  return $?
}
is_win() {
  case $OSTYPE in
    cygwin*)
      return 0;;
  esac
  return 1
}
is_mac() {
  case $OSTYPE in
    darwin*)
      return 0;;
  esac
  return 1
}
is_freebsd() {
  case $OSTYPE in
    freebsd*)
      return 0;;
  esac
  return 1
}
is_colinux() {
  [ "$ENV_WORKING" = 'colinux' ] && return 0
  return 1
}
# }}}

# {{{ OS settings
if is_win ; then
  export CYGWIN='cygwin'
  [ -e $HOME/.shrc.common.cygwin ] && source $HOME/.shrc.common.cygwin
elif is_mac ; then
  [ -e $HOME/.shrc.common.mac ] && source $HOME/.shrc.common.mac
  [ -e "/usr/local/Library/Homebrew" ] && PATH=/usr/local/bin:$PATH
  for fp in "/Applications/android-sdk-mac_x86/tools" ; do
    PATH=$PATH:$fp
  done
  [ "$LANG" = "ja_JP" ] && export LANG=ja_JP.UTF-8
fi

[ -d $HOME/bin ] && PATH=$HOME/bin:$PATH
[ -d $HOME/.bin ] && PATH=$HOME/.bin:$PATH

if is_colinux; then
  alias umount-c='sudo umount /c'
  alias mount-c='mount-c-smbfs'
  alias mount-c-cofs='sudo mount -t cofs cofs0 /c -o defaults,noatime,noexec,user,uid=$USER,gid=users'
  alias mount-c-smbfs='sudo mount -t smbfs "//windows/C\$" /c -o defaults,noatime,user,uid=$USER,gid=users,fmask=0644,dmask=0755,username=$USER'
  alias shutdown-colinux='sudo halt; exit'
fi
# }}}

# {{{ lang, own settings
if is_exec vim ; then
  export EDITOR="$(which vim)"
else
  export EDITOR="$(which vi)"
fi

if [ ! -e "$TERMINFO" -a -e "/usr/share/terminfo" ]; then
  export TERMINFO=/usr/share/terminfo
fi

# for perl
# export PERL_CPANM_OPT="--local-lib=$HOME/perl5"
# export PERL5LIB="${PERL5LIB}:$HOME/perl5/lib/perl5"
# export PATH="$HOME/perl5/bin:$PATH"
if [ -e $HOME/perl5 ]; then
  export PERLBREW_ROOT=$HOME/perl5/perlbrew
  PATH=$HOME/perl5/bin:$PATH
else
  export PERLBREW_ROOT=$HOME/.perlbrew
fi
if [ -s $PERLBREW_ROOT/etc/bashrc ] ;then
  PATH=$PERLBREW_ROOT/bin:$PATH
  source $PERLBREW_ROOT/etc/bashrc
fi

# for Ruby
[ -s $HOME/.rvm/scripts/rvm ] && source $HOME/.rvm/scripts/rvm
is_exec rails && alias r=rails

# c/c++ library path
#export PATH=~/bin:$QTDIR/bin:$KDEDIR/bin:/usr/local/bin:/usr/local/X11R7/bin:/usr/bin:/bin:./:/usr/local/sbin:/usr/sbin:/sbin:$ROOTSYS/bin:$TETEX_BIN_PATH:/usr/local/jre/bin:/usr/local/RealPlayer
#export LD_LIBRARY_PATH=/usr/local/X11R7/lib:$QTDIR/lib:$KDEDIR/lib:/usr/local/lib:/usr/lib:/lib:$ROOTSYS/lib:/usr/local/firefox

# java
if is_mac ; then
  _JAVA_OPTIONS=-Dawt.useSystemAAFontSettings=on
else
  _JAVA_OPTIONS=-Dawt.useSystemAAFontSettings=lcd
fi
if [ "$LANG" = 'ja_JP.UTF-8' ] ; then
  _JAVA_OPTIONS="$_JAVA_OPTIONS -Dfile.encoding=UTF-8"
fi
export _JAVA_OPTIONS

if [ -d /usr/lib/jvm/java-6-sun ];then
  JAVA_HOME=/usr/lib/jvm/java-6-sun
  export JAVA_HOME
  if [ -d $JAVA_HOME/jre ];then
    JRE_HOME=$JAVA_HOME/jre
    export JRE_HOME
  fi
fi

# for KDE/QT 
#export KDEDIR=/usr/local/kde
#export QTDIR=/usr/local/qt

# Python 
#export PYTHONPATH=/usr/local/lib/python2.5/site-packages:$ROOTSYS/lib
export PYTHONPATH=~/.lib/python
export PYTHONSTARTUP=~/.pyrc

# for teTeX 
#export TETEX_PATH=/usr/local/teTeX
#export TEXMF=$TETEX_PATH/share/texmf
#export TETEX_BIN_PATH=$TETEX_PATH/bin/i686-pc-linux-gnu

# Mozilla Setting
export MOZ_NO_REMOTE=true

# for mysql
#export MYSQL_PS1='[1;33m\u@\h[0m.[1;35m\d[0m mysql:\c> '
export MYSQL_PS1='\u@\h.\d mysql:\c> '

# }}}

export PATH

# {{{ color
# enable color support of ls and also add handy aliases
if [ "$TERM" != "dumb" ] && [ -x /usr/bin/dircolors ]; then
  eval "`dircolors -b`"
  #alias dir='ls --color=auto --format=vertical'
  #alias vdir='ls --color=auto --format=long'

  export GREP_COLOR='1;37;41'
  #alias grep='grep -E --color=auto'
  alias grep='grep --color=auto'
  #alias fgrep='fgrep --color=auto'
  #alias egrep='egrep --color=auto'
fi

# }}}

# {{{ aliases
if is_exec gls ; then
  alias ls='gls --color=auto'
else
  alias ls='ls --color=auto'
fi

#alias ls='ls -hF --show-control-chars --color'
#alias ls='ls --show-control-chars --color=auto'
alias ll='ls -l'
alias la='ls -A'
alias l='ls -CF'

alias grep='grep --color=auto'
alias today='date +%Y%m%d'

alias ..='cd ..'

alias cp='cp -ip'
alias rm=' rm -i'
alias mv='mv -i'
alias sudo=' sudo -H'

# vim
alias vimfiler='vim -c VimFiler'
alias vimshell='vim -c VimShell'

# lang
alias iperl='perl -de0'
alias rol='ruby -n -e '

# rsync 
alias rsync='rsync -avzu'

# display charset
alias utf8='export LANG=ja_JP.UTF-8; export LANGUAGE=ja_JP.UTF-8; export LC_ALL=ja_JP.UTF-8'
alias euc='export LANG=ja_JP.EUC; export LANGUAGE=ja_JP.EUC; export LC_ALL=ja_JP.EUC'
alias en='export LANG=en; export LANGUAGE=en; export LC_ALL=en'

alias viminspect='vim --startuptime "$HOME/vimrc-read.log"'
alias vimsafe='vim -u NONE -i NONE'
alias vimf='vim -u '

# win like
alias rd=rmdir
#alias pulist='ps aux | grep '

pulist() { # {{{
  local ARG i
  for i in $*; do
    if [ -z "$ARG" ]; then
      ARG=$i
    else
      ARG=$ARG"|"$i
    fi
  done
  if [ -z "$ARG" ]; then
    ps aux
  else
    ps aux | grep -E "PID|$ARG"
  fi
} # }}}

if [ -n "$ZSH_NAME" ]; then
  alias -g L='| less'
  alias -g H='| head'
  alias -g T='| tail'
  alias -g V="| vim -"
fi
# }}}

# GNU screen setting {{{
if is_exec tscreen; then
  alias screen=tscreen
fi

function ssh_screen(){
  eval server=?${$#}
  screen -t $server ssh "$@"
}

if [ x$TERM = xscreen ]; then
  alias ssh=ssh_screen
fi
# }}}

# vim: fdm=marker sw=2 ts=2 ft=zsh et:
