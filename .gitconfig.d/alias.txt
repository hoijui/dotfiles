# vim:fdm=marker sw=2 ts=2 ft=gitconfig expandtab:
[alias]
  a = "!f() { local res=$(git status -s | peco --prompt \"git add :\" | awk '{ print $2 }'); \
  [ -n \"$res\" ] && git add ${res} ; \
  }; f"
  df = "!f() { local res=$(git log --date=short --pretty=format:'%h [%ad] : %s <%an>' | peco | awk '{ print $1 }' ); \
    local file; \
    [ -n \"$res\" ] && file=$(git diff --no-prefix $res | grep '^--- ' | peco | awk '{ print $2 }'); \
    [ -n \"$file\" ] && git diff --no-prefix $res $file; \
  }; f"
  re = "!f() { local res=$(git status -s | peco --prompt \"git reset :\" | awk '{ print $2 }' ); \
    [ -n \"$res\" ] && git reset $res; \
  }; f"
  ls = ls-files
  co = checkout
  cob = "!f() { \
    local b=`git branch -a | peco --prompt \"git checkout :\"`;\
    [ -n \"${b}\" ] && git checkout $b ;\
  }; f"
  ci = commit
  ca = commit --amend
  st = status
  stt = status -uno
  ss = status -sb
  sl = shortlog -sn
  reba = rebase --abort
  rebc = rebase --continue
  br = branch
  fixup = commit --amend -C HEAD
  today = log --oneline --since='12 hour ago'
  info = "!f() { git config -l | grep -e '^\\(remote\\|branch\\|submodule\\|user\\)' | sort ; }; f;"
  edit-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; vim `f`"
  add-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; git add `f`"
  log-graph = log --graph --date=short --pretty=format:'%Cgreen%h %cd %Cblue%cn %Creset%s'
  log-all = log --graph --all --color --pretty='%x09%h %cn%x09%s %Cred%d%Creset'
  d = diff
  dm = diff master
  dw = diff --color-words
  dc = diff --cached
  ds = diff --staged
  d1 = diff HEAD~
  d2 = diff HEAD~~
  d3 = diff HEAD~~~
  d4 = diff HEAD~~~~
  d5 = diff HEAD~~~~~
  d10 = diff HEAD~~~~~~~~~~
  dt = difftool --dir-diff
  ; ignore = "!f() { local s=$1; shift; \
  ;   while [ $# -gt 0 ]; do s="$s,$1"; shift; done;\
  ;   curl -L "http://gitignore.io/api/$s"; }; f"
  pbcopy = !printf "$1" | pbcopy-wrapper
  export = "!f() {\n\
    for file in `git diff --name-only $1 $1^`; do \n\
    git archive --prefix=$2/ $1 $file | tar -xf - ; \n\
    done ; \n\
    }; f"
  pr-setup = config --add remote.origin.fetch +refs/pull/*/head:refs/remotes/origin/pr/*

